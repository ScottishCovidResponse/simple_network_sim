import random

import pytest

from simple_network_sim import common, network_of_populations as np, loaders


def test_basic_simulation(demographicsFilename, commute_moves, compartmentTransitionsByAgeFilename, simplified_mixing_matrix):
    network = np.createNetworkOfPopulation(compartmentTransitionsByAgeFilename, demographicsFilename, commute_moves, simplified_mixing_matrix)
    np.exposeRegions({"S08000016": {"[17,70)": 10.0}}, network.states[0])

    result = np.basicSimulationInternalAgeStructure(network=network, timeHorizon=200)

    expected = [
        0.0,
        4.27,
        5.959639,
        7.495611679138783,
        9.312950236851037,
        11.550993538742663,
        14.320787701076267,
        17.75033985271227,
        21.996503742218703,
        27.252949398353866,
        33.75899069582263,
        41.810321771950335,
        51.77222667433898,
        64.09584628369433,
        79.33820048957209,
        98.18681385491972,
        121.48997494363705,
        150.29387640147075,
        185.8881390324958,
        229.8615222784783,
        284.1699679579115,
        351.2195132804412,
        433.9670375214797,
        536.0422610458425,
        661.8948703020003,
        816.9710552241266,
        1007.9240487716604,
        1242.8633516336486,
        1531.6470661490678,
        1886.2209611360463,
        2321.006303780651,
        2853.3358520136644,
        3503.933436702875,
        4297.427114199809,
        5262.879037213718,
        6434.307593537448,
        7851.17047261448,
        9558.77382739165,
        11608.576689639052,
        14058.37640398757,
        16972.394791439,
        20421.337241197984,
        24482.56080469027,
        29240.54187587827,
        34787.84282542346,
        41226.694882333955,
        48671.10816544132,
        57249.09913568089,
        67104.27319206425,
        78395.77131930419,
        91295.66783240161,
        105983.41544499487,
        122637.84690962973,
        141428.32770915085,
        162507.49012493965,
        186008.04738127632,
        212045.055702501,
        240722.5804683081,
        272140.5555883791,
        306394.88951635855,
        343563.0817615905,
        383669.93055918853,
        426633.4500192302,
        472198.6511666236,
        519874.061293205,
        568889.9660173655,
        618195.9134891338,
        666506.9951861984,
        712395.349742955,
        754409.7037871203,
        791197.504185478,
        821605.423875327,
        844744.0664264034,
        860016.145152283,
        867117.5703402347,
        866023.8679325059,
        856970.8134856105,
        840431.873260339,
        817090.1543644443,
        787801.3971829445,
        753546.8620385419,
        715378.7390025588,
        674363.6476733297,
        631530.6070530642,
        587828.6203231266,
        544096.6731898431,
        501046.53585610265,
        459256.96121000533,
        419176.8930452347,
        381135.0270460169,
        345353.2664131795,
        311962.05149236403,
        281016.0491360187,
        252509.1623215926,
        226388.21690767314,
        202564.98766081466,
        180926.44555275,
        161343.25648915206,
        143676.65370160868,
        127783.8565664784,
        113522.22987023789,
        100752.37922989673,
        89340.36783091283,
        79159.22218932725,
        70089.87399049256,
        62021.663679202415,
        54852.51093140427,
        48488.83832137302,
        42845.317849432075,
        37844.49564813936,
        33416.33808189481,
        29497.732426705865,
        26031.967137640433,
        22968.21013516611,
        20260.9983252465,
        17869.747485480635,
        15758.28849787907,
        13894.433511438097,
        12249.573824253639,
        10798.309959437544,
        9518.113467890389,
        8389.019339402792,
        7393.34747358112,
        6515.45139937214,
        5741.492293677856,
        5059.2363021453275,
        4457.8731826933845,
        3927.854354753052,
        3460.7485293889417,
        3049.113206063021,
        2686.3804423767738,
        2366.7554275418715,
        2085.1265142313323,
        1836.9854838118085,
        1618.3569347519121,
        1425.7357919886028,
        1256.0320355255508,
        1106.521839243896,
        974.8043958427814,
        858.7637811884506,
        756.5352814837823,
        666.4756699935209,
        587.1369770394355,
        517.2433481091173,
        455.67063068395584,
        401.42837126774816,
        353.64394054144736,
        311.54853701174187,
        274.4648483620162,
        241.79617532402534,
        213.0168456049537,
        187.66376553814186,
        165.3289749547161,
        145.65308655233096,
        128.3195049928199,
        113.04933329710309,
        99.59688500681649,
        87.74573021009233,
        77.30521203004889,
        68.10737767860665,
        60.004274799596345,
        52.865569667251926,
        46.57644895889661,
        41.0357713649714,
        36.154439306457704,
        31.85396456257941,
        28.06520472558829,
        24.72725014452256,
        21.786443439100783,
        19.195515796714904,
        16.91282614457707,
        14.901690944327028,
        13.129793815273715,
        11.568665477575916,
        10.193225639011828,
        8.981379446648589,
        7.913662003390404,
        6.97292522386844,
        6.144061985943742,
        5.413763135100895,
        4.770303428152435,
        4.203352969024888,
        3.7038110999635054,
        3.2636600733721415,
        2.8758361481300927,
        2.534116034902891,
        2.2330168623188076,
        1.9677080535560396,
        1.7339336948375443,
        1.5279441462853374,
        1.3464357944240468,
        1.1864979768086406,
        1.0455662246190285,
        0.9213810709972622,
        0.8119517622569518,
        0.7155242883210267,
        0.6305532180663305,
        0.5556768865173284,
        0.4896955349597852,
        0.43155205233010824,
    ]
    

    assert result == pytest.approx(expected)

def test_basic_simulation_with_dampnening(demographicsFilename, commute_moves, compartmentTransitionsByAgeFilename, simplified_mixing_matrix, multipliers_filename):
    network = np.createNetworkOfPopulation(
        compartmentTransitionsByAgeFilename,
        demographicsFilename,
        commute_moves,
        simplified_mixing_matrix,
        multipliers_filename,
    )
    np.exposeRegions({"S08000016": {"[17,70)": 10.0}}, network.states[0])

    result = np.basicSimulationInternalAgeStructure(network=network, timeHorizon=200)

    expected = [
        0.0,
        4.27,
        5.959639,
        7.495611679138783,
        9.312950236851037,
        11.550993538742663,
        14.320787701076267,
        17.75033985271227,
        21.996503742218703,
        27.252949398353866,
        33.75899069582263,
        41.810321771950335,
        51.77222667433898,
        64.09584628369433,
        79.33820048957209,
        98.18681385491972,
        121.48997494363705,
        150.29387640147075,
        185.8881390324958,
        229.8615222784783,
        284.1699679579115,
        351.2195132804412,
        433.9670375214797,
        536.0422610458425,
        661.8948703020003,
        816.9710552241266,
        1007.9240487716604,
        1242.8633516336486,
        1531.6470661490678,
        1886.2209611360463,
        2321.006303780651,
        2853.3358520136644,
        3503.933436702875,
        4297.427114199809,
        5262.879037213718,
        6434.307593537448,
        7851.17047261448,
        9558.77382739165,
        11608.576689639052,
        14058.37640398757,
        16972.394791439,
        20421.337241197984,
        24482.56080469027,
        29240.54187587827,
        34787.84282542346,
        41226.694882333955,
        48671.10816544132,
        57249.09913568089,
        67104.27319206425,
        78395.77131930419,
        91295.66783240161,
        104703.72122549001,
        119399.4422719555,
        135590.9177348278,
        153351.15769239384,
        172702.7738929153,
        193639.63974785982,
        216140.94232477472,
        240186.10354186868,
        265768.0240069473,
        292899.2094617283,
        321605.730196567,
        351906.59380220936,
        383780.0657898908,
        417122.5490846455,
        451708.64366477716,
        487162.071173173,
        522945.81983206025,
        558376.200692737,
        592660.1886471106,
        624949.8189342917,
        654403.3302042728,
        680241.7569505797,
        701792.2578070778,
        718514.5720755871,
        730012.4423410484,
        737885.8712083432,
        740733.8980767169,
        738057.7790947092,
        729791.1176978729,
        716131.8551477112,
        700232.2371109804,
        680622.9076450454,
        657108.111152668,
        630054.9149881222,
        600081.9134181539,
        567905.3942120986,
        534253.8994032341,
        499817.25757218513,
        465216.2263727424,
        430986.1251955999,
        397570.47077126056,
        365321.70210052404,
        334506.6815280536,
        305315.12985508324,
        277869.5759371018,
        252235.7778079515,
        228432.8925099977,
        206442.93026406664,
        186219.22736537698,
        167693.8180109439,
        150853.54784029987,
        135554.9085061722,
        121676.73878334877,
        109109.05210061642,
        97748.51241848442,
        87496.8959044875,
        78260.80370223244,
        69951.82056279259,
        62486.760835199755,
        55787.85594372368,
        49782.83651044133,
        44404.90634882711,
        39592.623277675586,
        35289.70706998242,
        31444.794677495716,
        28011.160456244743,
        24946.41602607761,
        22212.20133882769,
        19773.875799579397,
        17600.215976740088,
        15663.124549560083,
        13937.353636705648,
        12400.244473015387,
        11031.484499066537,
        9812.882249123633,
        8728.159923332507,
        7762.763172297692,
        6903.687375502434,
        6139.319534052994,
        5459.294802636392,
        4854.366639062395,
        4316.289539451228,
        3837.713342951797,
        3412.0881240093972,
        3033.578736574659,
        2696.988128747308,
        2397.6886046500404,
        2131.560270348947,
        1894.9359604717345,
        1684.5520005416076,
        1497.504216030261,
        1331.2086521617796,
        1183.366518216385,
        1051.9329163358266,
        935.0889575582266,
        831.2169070867468,
        738.8780367211612,
        656.7928951226736,
        583.8237363223615,
        518.958873826157,
        461.2987520124174,
        410.0435484781557,
        364.48214075312774,
        323.9822885700969,
        287.98189882671386,
        255.98125467499898,
        227.53610298262365,
        202.2515058711078,
        179.77637228565203,
        159.79859470971908,
        142.0407243155936,
        126.25612514186966,
        112.22555440145848,
        99.75412183092406,
        88.66858616885413,
        78.81495146446001,
        70.05633002743352,
        62.271042490658616,
        55.35092871716354,
        49.19984618439462,
        43.73233506214982,
        38.87243149933604,
        34.552612680457955,
        30.71285903282825,
        27.299820584884966,
        24.266075916358535,
        21.56947342241431,
        19.172545753437095,
        17.041989305604712,
        15.148201538752145,
        13.46486969946568,
        11.968605240076338,
        10.638618857951018,
        9.456431642835453,
        8.405618321112527,
        7.471579031082043,
        6.641336459492647,
        5.903355521552379,
        5.24738307951187,
        4.66430547336756,
        4.146021884372464,
        3.6853317719791603,
        3.2758348203850507,
        2.91184200450684,
        2.588296539682244,
        2.3007036167243675,
        2.0450679460315784,
        1.8178382428645776,
        1.6158578823849015,
    ]

    assert result == pytest.approx(expected)


def test_basic_simulation_100_runs(demographicsFilename, commute_moves, compartmentTransitionsByAgeFilename, simplified_mixing_matrix):
    network = np.createNetworkOfPopulation(compartmentTransitionsByAgeFilename, demographicsFilename, commute_moves, simplified_mixing_matrix)

    runs = []
    rand = random.Random(1)
    for _ in range(100):
        regions = rand.choices(list(network.graph.nodes()), k=1)
        # This was added for backwards compatibility. Notice that ("m", "S") diminishes at each run.
        # TODO: make sure the states[0] is always reset after each run or that a new state is created before running
        #       exposeRegions
        network.states[0][regions[0]][("[17,70)","E")] = 0
        np.exposeRegions({regions[0]: {"[17,70)": 10.0}}, network.states[0])
        runs.append(np.basicSimulationInternalAgeStructure(network=network, timeHorizon=200))
    result = common.generateMeanPlot(runs)
    
    expected = [
        0.0,
        50.59949999999987,
        70.62172215000008,
        88.53931022707091,
        109.56636247264994,
        135.34853206188845,
        167.14984469911843,
        206.4071631984885,
        254.87373324508553,
        314.7096893453054,
        388.57970403115314,
        479.7709833785826,
        592.3380887919873,
        731.2809417118794,
        902.7634876627687,
        1114.3820309242192,
        1375.4940962960848,
        1697.6208369301644,
        2094.9385035826326,
        2584.877323979801,
        3188.8492877510726,
        3933.129727825788,
        4849.92110926586,
        5978.63087638765,
        7367.398258994237,
        9074.90715812521,
        11172.523020572658,
        13746.790167849313,
        16902.32128432944,
        20765.101136058092,
        25486.20964727897,
        31245.941055026473,
        38258.248677212054,
        46775.36624482793,
        57092.32644014563,
        69550.88602662107,
        84542.0395463978,
        102505.82995266705,
        123926.54288794434,
        149320.66302502764,
        179214.34114483523,
        214106.8699924608,
        254417.23277385643,
        300412.6874830515,
        352122.02645311994,
        409241.6849603488,
        471049.57065530727,
        536347.4917646612,
        603455.3841932332,
        670275.9573106923,
        734435.3597975116,
        793486.2191749464,
        845140.3396984589,
        887487.5691107938,
        919160.1382889302,
        939417.1400426354,
        948144.9940556776,
        945788.346841722,
        933236.2957634794,
        911690.2037257823,
        882534.3579606526,
        847223.1388788382,
        807191.2093201407,
        763787.9782859858,
        718234.4265573764,
        671598.8456019758,
        624787.5458075627,
        578546.6696949288,
        533471.6167068296,
        490021.1092414039,
        448533.54045638075,
        409243.889535539,
        372300.09795026074,
        337778.29496190697,
        305696.59644620155,
        276027.3828482844,
        248708.03594769075,
        223650.13987962986,
        200747.17602894278,
        179880.7838493173,
        160925.71491781555,
        143753.65664711662,
        128236.12754856204,
        114246.64183237539,
        101662.31390893932,
        90365.03568840979,
        80242.32308244762,
        71187.89940685664,
        63102.06400937922,
        55891.882831948205,
        49471.231154433364,
        43760.715106480064,
        38687.49606101836,
        34185.03984469015,
        30192.810441831614,
        26655.9254560679,
        23524.788093806594,
        20754.707956603084,
        18305.52057714352,
        16141.21348244424,
        14229.564663509896,
        12541.797692411712,
        11052.25635457007,
        9738.100541171985,
        8579.02425082726,
        7556.9958532396995,
        6656.020242066559,
        5861.922121285025,
        5162.149403402629,
        4545.595525612571,
        4002.4393914367456,
        3524.001603490621,
        3102.6156535956848,
        2731.5127680044725,
        2404.719158725114,
        2116.9644995254116,
        1863.6005214945728,
        1640.5287037302685,
        1444.1361165899602,
        1271.238555665766,
        1119.030182578301,
        985.0389627403853,
        867.0872597385576,
        763.2570105492418,
        671.8589653128987,
        591.4055298634053,
        520.586798799352,
        458.2494118157412,
        403.37790656452125,
        355.0782777845941,
        312.56348515131555,
        275.140681557625,
        242.1999596611439,
        213.2044378075082,
        187.68152714673334,
        165.21524015472923,
        145.43941709410043,
        128.03176141570776,
        112.70858791398996,
        99.22019878516183,
        87.34681276104078,
        76.89498134889811,
        67.69443403082516,
        59.5953011822869,
        52.46566956371543,
        46.18943061476369,
        40.6643865213862,
        35.800583205144655,
        31.51884306763513,
        27.749473568838397,
        24.4311305779364,
        21.509817954311988,
        18.938007035218543,
        16.67386166064382,
        14.680556086576333,
        12.925674652881819,
        11.380683405911277,
        10.020465050226356,
        8.822909637608134,
        7.768554311458754,
        6.8402662257264435,
        6.022963462498824,
        5.303369392952345,
        4.669796472532411,
        4.111955941932226,
        3.6207903285193703,
        3.1883260151987884,
        2.8075434714103675,
        2.4722630293550565,
        2.1770443423714188,
        1.9170978857504772,
        1.6882070568804792,
        1.486659604609185,
        1.3091872700000544,
        1.1529126546325532,
        1.0153024505587127,
        0.8941262697963391,
        0.7874204025997199,
        0.6934559141327493,
        0.6107105599226358,
        0.5378440627398748,
        0.4736763483627368,
        0.4171683859018994,
        0.36740532082614746,
        0.3235816261833529,
        0.28498803039953396,
        0.2510000089825296,
        0.22106765291955657,
        0.19470674899621637,
        0.17149092698588841,
        0.15104474602820772,
        0.13303760781432994,
        0.11717839763907321,
        0.10321076623471598,
        0.09090897572473715,
        0.08007424221184448,
        0.07053151559298967,
        0.0621266442969862,
        0.05472387892033187,
        0.048203674216722316,
    ]

    assert result == pytest.approx(expected)
